(ns assignment3.core
  (:require [quil.core :refer :all])
  (:import java.awt.event.KeyEvent))

(def params {
	:screen-dimensions [400 400]
	:background-colour 0
    :screen-bounds [0 380]})


(defn setup []
  (smooth)
  (no-stroke)
  (no-loop))

(defn draw
  []
  (println "...")
  )

(def valid-keys {
  KeyEvent/VK_UP :up
  KeyEvent/VK_DOWN :down
  KeyEvent/VK_LEFT :left
  KeyEvent/VK_RIGHT :right
  \w :up
  \s :down
  \a :left
  \d :right})

(def moves {:up [0 -10]
  :down [0 10]
  :left [-10 0]
  :right [10 0]
  :still [0 0]})

(defn charcode-to-keyword [c] (->> c str keyword))

(defn change-location [delta current-position]
  (map #(reduce + %) (split-at 2 (interleave delta current-position))))

(defn key-press []
  (let [raw-key (raw-key)
    the-key-code (key-code)
    the-key-pressed (if (= processing.core.PConstants/CODED (int raw-key)) the-key-code raw-key)]
    (println the-key-pressed)
    ))

(defsketch key-listener
  :title "Keyboard arrow keys demo"
  :size (params :screen-dimensions)
  :setup setup
  :draw draw
  :target :perm-frame
  :key-pressed key-press)

(defn -main [& args])
